class Nodo {
	private String dato;
	private Nodo izquierda, derecha;

	public Nodo(String dato) {
		this.dato = dato;
		this.izquierda = null;
		this.derecha = null;
	}

	public String getDato() {
		return dato;
	}

	public Nodo getIzaquierda() {
		return izquierda;
	}

	public void setIzquierda(Nodo izquierda) {
		this.derecha = derecha;
	} 

	public Nodo getDerecha() {
		return derecha;
	}

	public void setDerecha(Nodo derecha) {
		this.derecha = derecha;
	} 

	public void imprimirCadena() {
		System.out.println(this.getDato());
	}
}

class Arbol {
	private Nodo raiz;

	public boolean buscarNodo(String busqueda) {
		return buscarNodo(this.raiz, busqueda);
	}

	private boolean existe(Nodo n, String busqueda) {
		if(n == null) {
			return false;
		}
		if(n.getDato().equals(busqueda)) {
			return true;
		} else if(busqueda.comparetTo(n.getDato()) < 0) {
			return existe(n.getIzquierda(), busqueda);
		} else {
			return existe(n.getDerecha(), busqueda);
		}
	}

	public void insertar(String cadena) {
		if (this.raiz == null) {
			this.raiz = new Nodo(dato);
		} else {
			this.insertar(this.raiz, dato);
		}
	}

	public void insertar(Nodo padre, String dato) {
		if (dato.compareTo(padre.getDato()) > 0) {
			if (padre.getDerecha() == null) {
				padre.setDerecha(new Nodo(dato));
			} else {
				this.insertar(padre.getDerecha(), dato);
			}
		} else {
			if (padre.getIzquierda() == null) {
				padre.setDerecha(new Nodo(dato));
			} else {
				this.insertar(padre.getIzquierda(), dato);
			}
		}
	}